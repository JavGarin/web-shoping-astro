---
import Layout from '../layouts/Layout.astro';
import type { CartItem } from '../lib/cart';
---

<Layout title="Carrito de Compras - TheCountryHouse">
  <div class="text-center">
    <h1 class="text-4xl font-bold">Carrito de Compras</h1>
  </div>

  <div id="cart-items" class="mt-8"></div>

  <div id="empty-cart-message" class="text-center mt-8" style="display: none;">
    <p class="text-lg text-charcoal-gray">Tu carrito está vacío.</p>
  </div>

  <div class="text-right mt-8">
    <p class="text-2xl font-bold">Total: <span id="cart-total">$0.00</span></p>
    <a href="/checkout" class="mt-4 inline-block rounded-md bg-forest-green px-6 py-3 text-lg font-medium text-cream-beige shadow hover:bg-earth-brown transition-colors">
      Finalizar Compra
    </a>
  </div>
</Layout>

<script>
  import { getCart, removeFromCart } from '../lib/cart';

  function renderCart() {
    const cartItemsContainer = document.getElementById('cart-items');
    const emptyCartMessage = document.getElementById('empty-cart-message');
    const cartTotal = document.getElementById('cart-total');

    if (!cartItemsContainer || !emptyCartMessage || !cartTotal) return;

    const cart = getCart();
    cartItemsContainer.innerHTML = '';

    if (cart.length === 0) {
      emptyCartMessage.style.display = 'block';
    } else {
      emptyCartMessage.style.display = 'none';
      cart.forEach(item => {
        const cartItem = document.createElement('div');
        cartItem.className = 'flex items-center justify-between border-b border-earth-brown py-4';
        cartItem.innerHTML = `
          <div class="flex items-center gap-4">
            <img src="${item.product.imageUrl}" alt="${item.product.name}" class="w-20 h-20 object-cover rounded-lg">
            <div>
              <h3 class="text-lg font-medium text-charcoal-gray">${item.product.name}</h3>
              <p class="text-charcoal-gray">Cantidad: ${item.quantity}</p>
            </div>
          </div>
          <div>
            <p class="text-lg font-medium">${(item.product.price * item.quantity).toFixed(2)}</p>
            <button class="remove-from-cart-btn text-red-500 hover:text-red-700" data-product-id="${item.product.id}">Eliminar</button>
          </div>
        `;
        cartItemsContainer.appendChild(cartItem);
      });
    }

    const total = cart.reduce((sum, item) => sum + item.product.price * item.quantity, 0);
    cartTotal.textContent = `${total.toFixed(2)}`;

    document.querySelectorAll('.remove-from-cart-btn').forEach(button => {
      const btn = button as HTMLElement;
      if (btn.dataset.listenerAttached) return;
      btn.addEventListener('click', () => {
        const productId = parseInt(btn.getAttribute('data-product-id') ?? '');
        removeFromCart(productId);
        renderCart(); // Re-render the cart
      });
      btn.dataset.listenerAttached = 'true';
    });
  }

  document.addEventListener('astro:page-load', renderCart);
  renderCart();
</script>
